---
import moment from 'moment'
import { experience } from '../../assets/experience'
import type { Experience } from '../../assets/experience'
import EventTypeIcon from '../projects/EventTypeIcon.astro'
import { SKILL_EVENT_TYPE } from '../../types'
import { formatDuration } from '../../utils'
interface Props {
    types: readonly Experience['type'][]
    sort: 'latest' | 'earliest' | 'position' | 'reverse_position'
}

const { types, sort } = Astro.props

const experiences = Object.entries(experience)
    .map(([id, data]) => ({ id, ...data }))
    .filter((exp) => types.includes(exp.type))

// based on the sort prop, sort by latest or earliest
if (sort == 'latest') {
    // sort by the latest end time, if null (present), sort by start date (latest first)
    experiences.sort((a, b) => {
        if (a.end_date == null && b.end_date == null) return b.start_date.getTime() - a.start_date.getTime()
        if (a.end_date == null) return -1
        if (b.end_date == null) return 1
        return b.end_date.getTime() - a.end_date.getTime()
    })
} else if (sort == 'earliest') {
    experiences.sort((a, b) => {
        return a.start_date.getTime() - b.start_date.getTime()
    })
} else if (sort == 'position') {
    experiences.sort((a, b) => a.position - b.position)
} else if (sort == 'reverse_position') {
    experiences.sort((a, b) => b.position - a.position)
}

moment.locale('en-au')
---

<div class="pl-[32px] relative flex flex-col gap-5">
    <div class="absolute left-[19.5px] h-[calc(100%-15px)] w-[1px] bg-gray-50 mt-[10px]"></div>
    {
        experiences.map((experience) => {
            const date_string = `${moment(experience.start_date).calendar()} - ${experience.end_date ? moment(experience.end_date).calendar() : 'Present'}`
            const duration = experience.end_date ? moment.duration(moment(experience.end_date).diff(experience.start_date)) : null
            const title = experience.title
            return (
                <div class="flex flex-col gap-1 relative">
                    <div class="w-2 h-2 rounded-full absolute -left-[16px] top-[6px] bg-gray-50" />
                    <div class="flex flex-col">
                        <label class="text-sm -mb-1">
                            <span>{date_string}</span>
                            {duration && <span> ({formatDuration(duration)})</span>}
                        </label>
                        <h3>{title}</h3>
                    </div>
                    <div class="pl-4 flex flex-col gap-2">
                        <p>{experience.description}</p>
                        <div class="flex flex-row gap-3 items-center">
                            <span class="-mr-1">Skills: </span>
                            {experience.skills.map(({ skill, events }) => {
                                /** @todo extract this into seperate component */
                                const capitalise = (s: string) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase()
                                const past = (s: string) => {
                                    if (s == 'BEGIN') return 'BEGUN'
                                    if (s == 'LEARN') return 'LEARNT'
                                    if (s == 'MASTER') return 'MASTERED'
                                    return '?'
                                }
                                let title = ''
                                if (
                                    events.includes(SKILL_EVENT_TYPE.BEGIN) &&
                                    events.includes(SKILL_EVENT_TYPE.LEARN) &&
                                    events.includes(SKILL_EVENT_TYPE.MASTER)
                                ) {
                                    title = 'Begun, Learnt & Mastered'
                                } else if (events.length != 0) {
                                    title = events.map(past).map(capitalise).join(' & ')
                                }
                                title += (title.length > 1 ? ' ' : '') + skill
                                return (
                                    <div class="flex flex-row gap-2 border rounded px-2 py-1" title={title}>
                                        <span>{skill}</span>
                                        <span class="flex flex-row gap-1 items-center">
                                            {events.map((t) => (
                                                <EventTypeIcon type={t} size={18} />
                                            ))}
                                        </span>
                                    </div>
                                )
                            })}
                        </div>
                    </div>
                </div>
            )
        })
    }
</div>
