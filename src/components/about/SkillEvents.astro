---
import type { SkillEvent } from '../../types';
import { SKILL_EVENT_TYPE, sortSkillEvent } from '../../types'
import EventTypeIcon from "../projects/EventTypeIcon.astro";

interface Props {
    event: SkillEvent
}
const { event } = Astro.props
const { skill, events } = event

const capitalise = (s: string) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase()
const past = (s: string) => {
    if (s == 'BEGIN') return 'BEGUN LEARNING'
    if (s == 'LEARN') return 'IMPROVED UPON'
    if (s == 'MASTER') return 'PROFICIENT WITH'
    return '?'
}
let title = ''
if (events.includes(SKILL_EVENT_TYPE.BEGIN) && events.includes(SKILL_EVENT_TYPE.LEARN) && events.includes(SKILL_EVENT_TYPE.MASTER)) {
    title = 'Begun, Improved & Became Proficient with'
} else if (events.length != 0) {
    title = events.map(past).map(capitalise).join(' & ')
}
title += (title.length > 1 ? ' ' : '') + (skill ? skill + " skills" : "")
---

<div class="flex flex-row gap-2 border border-borders-primary rounded px-2 py-1" title={title}>
    <span class="flex flex-row gap-1 items-center">
        {events.sort(sortSkillEvent).map((t) => <EventTypeIcon type={t} size={18} />)}
    </span>
    <span>{skill}</span>
</div>
