---
import moment from 'moment'
interface Props {
    limit: number | null
    group_commits: boolean
}

const { limit, group_commits } = Astro.props

const activity = await (await fetch(import.meta.env.POSTS_URL)).json()
export const prerender = false

/** @todo fix typings & move to utils file */
function getTimeline(activities: any, group_commits: any) {
    const DAY_IN_MS = 24 * 60 * 60 * 1000 // Milliseconds in a day
    const event_timeline = []
    const timeline = activities.toReversed()

    let commits: any = []
    let last_commit_date = 0

    const pushCommits = () => {
        if (commits.length > 0) {
            event_timeline.push({
                category: 'COMMITS',
                commits: commits.slice().reverse(),
                date: commits[commits.length - 1].date,
                title: `${commits.length} Commits to f0rbit/${commits[0].project}`,
                project: commits[0].project,
            })
            commits = []
        }
    }

    for (const item of timeline) {
        if (item.category == 'BLOG') continue //skip over blog events for  now, malfored data in db
        if (item.category === 'GITHUB' && group_commits) {
            const item_date = item.date // Convert unix timestamp to milliseconds

            if (commits.length === 0 || (item.project === commits[0].project && item_date - last_commit_date <= 3 * DAY_IN_MS)) {
                commits.push(item)
                last_commit_date = item_date
            } else {
                pushCommits()
                commits = [item]
                last_commit_date = item_date
            }
        } else {
            pushCommits()
            event_timeline.push(item)
        }
    }

    pushCommits() // Push any remaining commits

    return event_timeline.toReversed()
}

let events = getTimeline(activity, group_commits)

// limit the response
if (limit) events = events.slice(0, limit)
---

<div class="relative pl-10">
    <div class="absolute left-5 h-[calc(100%-20px)] w-[1px] bg-base-text-subtle mt-3"></div>
    <div class="flex flex-col gap-2">
        {
            events.map((event) => {
                return (
                    <div class="relative">
                        <div class="w-2 h-2 rounded-full bg-base-text-subtlish -left-[23.5px] top-2 absolute" />
                        <div class="flex flex-col">
                            <label class="text-sm -mb-1">{moment(event.date).fromNow()}</label>
                            <h3 class="text-base-text-secondary">{event.title ?? ''}</h3>
                        </div>
                        <div class="pl-5">
                        {event.category == 'GITHUB' && (
                            <p class="text-sm">
                                <a href={event.permalink} class="font-mono">{event.sha.slice(0, 7)}</a> - <a href={`https://github.com/f0rbit/${event.project}`}>forbit/{event.project}</a>
                            </p>
                        )}
                        {event.category == 'COMMITS' && (
                            <div>
                                {event.commits.map((commit: any) => (
                                    <p>
                                        <span class="font-mono">{commit.sha.slice(0, 7)}</span> - <span>{commit.title}</span>
                                    </p>
                                ))}
                            </div>
                        )}
                        </div>
                    </div>
                )
            })
        }
    </div>
</div>
